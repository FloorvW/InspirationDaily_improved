{"remainingRequest":"/Users/floorvanwieringen/photo-gallery/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/floorvanwieringen/photo-gallery/src/components/Photo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/floorvanwieringen/photo-gallery/src/components/Photo.vue","mtime":1600694719841},{"path":"/Users/floorvanwieringen/photo-gallery/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/floorvanwieringen/photo-gallery/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/floorvanwieringen/photo-gallery/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/floorvanwieringen/photo-gallery/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJQaG90byIsCiAgLy8gICBkYXRhKCkgewogIC8vICAgICByZXR1cm4gewogIC8vICAgICAgIHBob3RvcywKICAvLyAgICAgfTsKICAvLyAgIH0sCiAgcHJvcHM6IFsicGhvdG9zIl0sCi8vICAgY29tcHV0ZWQ6IHsKLy8gICAgIHBob3RvKCkgewovLyAgICAgICBmb3IgKHZhciBwaG90byBvZiBwaG90b3MpIHsKLy8gICAgICAgICBpZiAocGhvdG8uaWQgPT09IE51bWJlcih0aGlzLiRyb3V0ZS5wYXJhbXMuaWQpKSB7Ci8vICAgICAgICAgICByZXR1cm4gcGhvdG87Ci8vICAgICAgICAgfQovLyAgICAgICB9Ci8vICAgICAgIHJldHVybiBudWxsOwovLyAgICAgfSwKLy8gICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIHBob3RvVXJsKGZpbGVuYW1lKSB7CiAgICAvLyAgIHJldHVybiByZXF1aXJlKGAuLi9hc3NldHMvaW1hZ2VzLyR7ZmlsZW5hbWV9YCk7CiAgICAvLyB9LAogICAgY2xvc2VMaWdodGJveCgpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goIi8iKTsKICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["Photo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Photo.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"lightbox\" @click.self=\"closeLightbox\">\n    <img :src=\"photo.urls.small\" />\n    <div class=\"lightbox-info\">\n      <div class=\"lightbox-info-inner\" v-for=\"photo in photos\" :key=\"photo.id\">\n        <p v-if=\"photo.title\">{{photo.title}} </p>\n        <!-- <p v-if=\"photo.location\">{{ photo.location }}</p>\n        <p v-if=\"photo.photographer\">\n          <a rel=\"nofollow\" :href=\"photo.photographer.url\">{{ photo.photographer.name }}</a>\n        </p>\n        <p v-if=\"photo.source\">\n          <a rel=\"nofollow\" :href=\"photo.source.url\">{{ photo.source.name }}</a>\n        </p> -->\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\n\nexport default {\n  name: \"Photo\",\n  //   data() {\n  //     return {\n  //       photos,\n  //     };\n  //   },\n  props: [\"photos\"],\n//   computed: {\n//     photo() {\n//       for (var photo of photos) {\n//         if (photo.id === Number(this.$route.params.id)) {\n//           return photo;\n//         }\n//       }\n//       return null;\n//     },\n//   },\n  methods: {\n    // photoUrl(filename) {\n    //   return require(`../assets/images/${filename}`);\n    // },\n    closeLightbox() {\n      this.$router.push(\"/\");\n    },\n  },\n};\n</script>\n\n<style scoped>\n.lightbox {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.8);\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 2rem;\n}\n\n.lightbox img {\n  margin: auto;\n  width: 100%;\n  grid-column-start: 2;\n}\n\n.lightbox-info {\n  margin: auto 2rem auto 0;\n}\n\n.lightbox-info-inner {\n  background-color: #ffffff;\n  display: inline-block;\n  padding: 2rem;\n}\n</style>"]}]}